-- / Roblox Services /
local ContextActionService = game:GetService("ContextActionService")
local Debris = game:GetService("Debris")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
-- / Game Folders /
local Players  = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
-- / Player /
local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()
local Camera = workspace.CurrentCamera

-- / Local Settings
local gui = Instance.new("ScreenGui",Player.PlayerGui)
gui.ResetOnSpawn = false
local Infos = Instance.new("ScreenGui",Player.PlayerGui)
Infos.ResetOnSpawn = false

-- / Local Variables
_G.aimbot = false
_G.aimbotTarget = nil
_G.aimbotAngles = {-6.5,0,0}
_G.epitaph = 0.234
_G.espRange = 200
lastPos = Vector3.zero
print(unpack(_G.aimbotAngles))

-- / Functions
function Raycast(origin,direction,ignores,test) -- 18
	local RaycastParam = RaycastParams.new()
	RaycastParam.IgnoreWater = true
	RaycastParam.FilterType = Enum.RaycastFilterType.Exclude
	RaycastParam.FilterDescendantsInstances = ignores or {}

	local results = game:GetService("Workspace"):Raycast(origin,direction,RaycastParam)

	return results
end

function GetChar(send,check) -- 7,3
	if NilCheck(send) then return end
	if send:IsA("Player") then
		send = send.Character
	end
	if send then
		local Humanoid = send:FindFirstChildOfClass("Humanoid") or send.Parent:FindFirstChildOfClass("Humanoid")
		if Humanoid then
			local Character = Humanoid.Parent
			local humPart = Character:FindFirstChild("HumanoidRootPart")
			local Animator = Humanoid:FindFirstChildOfClass("Animator")
			if humPart and Animator then
				if not check or Humanoid.Health > 0 then
					return Character,Humanoid,humPart,Animator
				end
			end
		end
	end
end

function GetTool(send,check) -- 7,20
	local Character = GetChar(send,check)
	if Character then
		local Tool = Character:FindFirstChildOfClass("Tool")
		if Tool then
			return Tool
		end
	end
end

function Delete(instance) -- 4
	if not NilCheck(instance) then
		instance:Destroy()
	end
end

function Lerp(min,max,dist) -- 12
	return min+(max-min)*dist
end

function NilCheck(instance) -- 14
	if not instance or typeof(instance) ~= "Instance" or not instance.Parent then
		return true
	else
		return false
	end
end

function GetAllChars(live)
	local chars = {}
	local function FindChars(folder)
		for _,v in pairs(folder:GetChildren()) do
			local char,humanoid,humpart = GetChar(v,live)
			if char and not table.find(chars,char) then
				table.insert(chars,char)
			end
		end
	end
	FindChars(workspace)
	for _,v in pairs(workspace:GetChildren()) do
		if v:IsA("Folder") then
			FindChars(v)
		end
	end

	return chars
end

function GetClosestToMouse(range,onlyPlayer)
	local target = nil
	local minDist = range
	local chars = nil
	if onlyPlayer then
		for _,player in pairs(Players:GetPlayers()) do
			local char = GetChar(Player,true)
			if char then
				table.insert(chars,char)
			end
		end
	else
		chars = GetAllChars(true)
	end
	if not chars or not next(chars) then return end

	for _,char in pairs(chars) do
		if char.Name ~= Player.Name then
			local humPart = char:FindFirstChild("HumanoidRootPart")
			local dist = (humPart.Position-lastPos).Magnitude
			if dist <= _G.espRange then
				local screenpoint,visible = Camera:WorldToScreenPoint(humPart.Position)
				local distance = (Vector2.new(Camera.ViewportSize.X/2,Camera.ViewportSize.Y/2)-Vector2.new(screenpoint.X,screenpoint.Y)).Magnitude
				if visible and distance <= minDist then
					target = char
					minDist = distance
				end
			end
		end
	end

	return target
end

function AddCharm(part,color,transparency)
	if NilCheck(part) then return end
	local function NewCharm(p,color)
		local Charm = p:FindFirstChild("Charm") or Instance.new("BoxHandleAdornment")
		Charm.Name = "Charm"
		Charm.Adornee = p
		Charm.AlwaysOnTop = true
		Charm.Color3 = color or Color3.fromRGB(255,255,255)
		Charm.Transparency = transparency or 0.7
		Charm.Size = p.Size
		Charm.Visible = true
		Charm.ZIndex = 1
		Charm.Parent = p
	end
	if part:IsA("Model") then
		for _,v in pairs(part:GetChildren()) do
			if v:IsA("BasePart") then
				if v.Name == "Head" and color ~= Color3.fromRGB(0,0,0) then
					NewCharm(v,Color3.fromRGB(125,0,175))
				else
					NewCharm(v,color)
				end
			end
		end
	else
		NewCharm(part)
	end
end

function RemoveCharm(part)
	if part:IsA("Model") then
		for _,v in pairs(part:GetChildren()) do
			if v:IsA("BasePart") then
				Delete(v:FindFirstChild("Charm"))
			end
		end
	else
		Delete(part:FindFirstChild("Charm"))
	end
end

function AddInfo(target,name,health,distance)
	local Target,Humanoid,humPart = GetChar(target)
	if not Target then return end
	local Head = Target:FindFirstChild("Head")

	local oldText = nil
	for _,v in pairs(Infos:GetChildren()) do
		local MasterV = v:FindFirstChild("MasterV")
		if MasterV and MasterV.Value == Target then
			oldText = v
		end
	end

	local text = ""
	if name then
		text = text.."Name: "..Target.Name
	end
	if health then
		text = text.."/Health: "..Humanoid.Health
	end
	if distance then
		local dist = (humPart.Position-lastPos).Magnitude
		text = text.."/Dist: "..dist
	end

	local point = humPart.Position+Vector3.new(0,7,0)
	if Head then point = Head.Position+Vector3.new(0,3,0) end
	local poisition,visible = Camera:WorldToScreenPoint(point)
	local Text = oldText or Instance.new("TextLabel")
	Text.Name = "InfoText"
	Text.BackgroundTransparency = 1
	Text.Position = UDim2.new(-0.15,poisition.X,-0.05,poisition.Y)
	Text.Size = UDim2.new(0.3,0,0.1,0)
	Text.Visible = visible
	Text.ZIndex = 2
	Text.Text = text
	Text.TextColor3 = Color3.fromRGB(255,255,255)
	Text.TextSize = 6
	Text.TextStrokeColor3 = Color3.fromRGB(0,0,0)
	Text.TextStrokeTransparency = 0
	Text.Parent = Infos
	local MasterV = Text:FindFirstChild("MasterV") or Instance.new("ObjectValue",Text)
	MasterV.Name = "MasterV"
	MasterV.Value = Target
end

function RemoveInfo(target)
	local oldText = nil
	for _,v in pairs(Infos:GetChildren()) do
		local MasterV = v:FindFirstChild("MasterV")
		if MasterV and MasterV.Value == target then
			oldText = v
		end
	end
	if oldText then
		oldText:Destroy()
	end
end

function CreateButton(text,pos,size,parent)
	local Button = Instance.new("TextButton")
	Button.BackgroundTransparency = 0.7
	Button.TextStrokeTransparency = 0.7
	Button.Text = text
	Button.Position = pos+UDim2.new(0,-size/2,0,-size/2)
	Button.Size = UDim2.new(0,size,0,size)
	Button.Parent = parent
	local Corner = Instance.new("UICorner",Button)
	Corner.CornerRadius = UDim.new(0,size/2)
	local Stroke = Instance.new("UIStroke",Button)
	Stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	Stroke.LineJoinMode = Enum.LineJoinMode.Round
	Stroke.Thickness = size/15
	Stroke.Transparency = 0.3

	return Button
end

local aimbotB = CreateButton("AimLock",UDim2.new(0.75,0,0.55,0),50,gui)
aimbotB.Activated:Connect(function(input)
	if _G.aimbot then
		_G.aimbotTarget = nil
		_G.aimbot = false
		aimbotB.TextStrokeTransparency = 0.7
	else
		_G.aimbotTarget = nil
		_G.aimbot = true
		aimbotB.TextStrokeTransparency = 0
	end
end)

RunService.PreRender:Connect(function(step)
	local Character,Humanoid,humPart = GetChar(Player)
	if Character then
		lastPos = humPart.Position
		Humanoid.WalkSpeed = 38
		Humanoid.HipHeight = 1.5
		if _G.aimbot then
			if not _G.aimbotTarget then
				_G.aimbotTarget = GetClosestToMouse(100)
			end
			local target,_,humPart = GetChar(_G.aimbotTarget,true)
			if target then
				local dist = (humPart.Position-lastPos).Magnitude
				if dist <= _G.espRange then
					local targetPart = humPart
					local Head = target:FindFirstChild("Head")
					if Head then
						targetPart = Head
					end
					local point = targetPart.CFrame+(humPart.Velocity*Vector3.new(_G.epitaph,_G.epitaph*0.25,_G.epitaph))
					Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position,point.Position)*CFrame.Angles(math.rad(_G.aimbotAngles[1]),math.rad(_G.aimbotAngles[2]),math.rad(_G.aimbotAngles[3]))
				end
			else
				_G.aimbotTarget = nil
			end
		end
	end

	local chars = GetAllChars()
	local range = _G.espRange
	for _,char in pairs(chars) do
		if char.Name ~= Player.Name then
			local _,_,humPart = GetChar(char)
			local dist = (humPart.Position-lastPos).Magnitude
			if dist <= range then
				local player = Players:GetPlayerFromCharacter(char)
				local color = Color3.fromRGB(255,255,255)
				local info = nil
				if GetChar(char,true) then
					if player then
						color = Color3.fromRGB(0,0,255)
						info = {true,true,false}
					else
						color = Color3.fromRGB(255,0,0)
						info = {true,true,false}
					end
				else
					color = Color3.fromRGB(0,0,0)
					info = {false,false,false}
				end

				AddCharm(char,color,0.7)
				if info then
					AddInfo(char,info[1],info[2],info[3])
				end
			else
				RemoveCharm(char)
				RemoveInfo(char)
			end
		end
	end
	for _,v in pairs(Infos:GetChildren()) do
		local MasterV = v:FindFirstChild("MasterV")
		if not MasterV or not GetChar(MasterV.Value) then
			Delete(v)
		end
	end
end)
